version: "3"

services:
  backend:
    image: frappe/erpnext:v14.70.6
    labels:
      - "traefik.enable=true"
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
        - sites:/home/frappe/frappe-bench/sites
        - logs:/home/frappe/frappe-bench/logs


  configurator:
    image: frappe/erpnext:v14.70.6
    deploy:
      restart_policy:
        condition: none
    entrypoint:
      - bash
      - -c

    command:
      - >
        ls -1 apps > sites/apps.txt;
        bench set-config -g db_host ${DB_HOST};
        bench set-config -gp db_port 3306;
        bench set-config -g redis_cache "redis://${REDIS_CACHE}";
        bench set-config -g redis_queue "redis://${REDIS_QUEUE}";
        bench set-config -g redis_socketio "redis://${REDIS_QUEUE}";
        bench set-config -gp socketio_port ${SOCKETIO_PORT};

    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  create-site:
    image: frappe/erpnext:v14.70.6
    deploy:
      restart_policy:
        condition: none
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    entrypoint:
      - bash
      - -c
    command:
      - >
        wait-for-it -t 120 db:3306;
        wait-for-it -t 120 redis-cache:6379;
        wait-for-it -t 120 redis-queue:6379;
        export start=`date +%s`;
        until [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".db_host // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_cache // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_queue // empty"` ]];
        do
          echo "Waiting for sites/common_site_config.json to be created";
          sleep 5;
          if (( `date +%s`-start > 120 )); then
            echo "could not find sites/common_site_config.json with required keys";
            exit 1
          fi
        done;
        echo "sites/common_site_config.json found";
        bench new-site --no-mariadb-socket --admin-password=admin --db-root-password=admin --set-default frontend;

  db:
    image: mariadb:10.6
    healthcheck:
      test: mariadb-admin ping -h localhost --password=${DB_ROOT_PASS}
      interval: 1s
      retries: 15
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
    volumes:
      - db-data:/var/lib/mysql




  traefik:
    image: traefik:2.5
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesResolvers.main-resolver.acme.httpChallenge=true
      - --certificatesResolvers.main-resolver.acme.httpChallenge.entrypoint=web
      - --certificatesResolvers.main-resolver.acme.email=${LE_EMAIL}
      - --certificatesResolvers.main-resolver.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - cert-data:/letsencrypt


  frontend:
    image: frappe/erpnext:v14.70.6
    labels:
      - traefik.enable=true
      - traefik.http.services.frontend.loadbalancer.server.port=8080
      - traefik.http.routers.frontend-http.entrypoints=websecure
      - traefik.http.routers.frontend-http.tls.certresolver=main-resolver
      - traefik.http.routers.frontend-http.rule=Host(`${SITE_NAME}`)

    deploy:
      restart_policy:
        condition: on-failure
    command:
      - nginx-entrypoint.sh
    environment:
      BACKEND: backend:8000
      FRAPPE_SITE_NAME_HEADER: ${SITE_NAME}
      SOCKETIO: websocket:9000
      UPSTREAM_REAL_IP_ADDRESS: 127.0.0.1
      UPSTREAM_REAL_IP_HEADER: X-Forwarded-For
      UPSTREAM_REAL_IP_RECURSIVE: "off"
      PROXY_READ_TIMEOUT: 120
      CLIENT_MAX_BODY_SIZE: 50m
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    ports:
      - "8080:8080"
  queue-long:
    image: frappe/erpnext:v14.70.6
    labels:
      - "traefik.enable=false"
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - bench
      - worker
      - --queue
      - long,default,short
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs


  queue-short:
    image: frappe/erpnext:v14.70.6
    labels:
      - "traefik.enable=false"
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - bench
      - worker
      - --queue
      - short,default
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs


  redis-queue:
    image: redis:6.2-alpine
    labels:
      - "traefik.enable=false"
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - redis-queue-data:/data


  redis-cache:
    image: redis:6.2-alpine
    labels:
      - "traefik.enable=false"
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - redis-cache-data:/data


  scheduler:
    image: frappe/erpnext:v14.70.6
    labels:
      - "traefik.enable=false"
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - bench
      - schedule
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs


  websocket:
    image: frappe/erpnext:v14.70.6
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - node
      - /home/frappe/frappe-bench/apps/frappe/socketio.js
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs





volumes:
  db-data:
  redis-queue-data:
  redis-cache-data:
  sites:
    name: sites
    external: true
  logs:
  cert-data: